1.1.0:
* Client: configuring "Walletdir" to allow improved privacy of the wallets
* Downloader: look for "Datadir" in "gocoin.conf" or "../client/gocoin.conf"
* Client: the Blocks page of WebUI shows version of the recent blocks
* Fix for issue #12 (Snappy URL changed)

1.0.3 - 2015-03-27
* Fix: GetHeaders for orphaned block does not cause panic anymore
* Fix: Github issue #11 (panic when first time run client)

1.0.2 - 2015-01-02
* Fix: GetHeaders for unknown block does not cause panic anymore
* Fix: Index out of range in "client/usif/webui/wallets.go" seen when quickly switching wallets
* Baning of incomming peers ignores the remote port number (only checks IP)
* WebUI: show last block number in the top level menu

1.0.1 - 2014-10-19
* Parallel processing switched back on (was accidentally disabled in "lib/others/sys/const.go")

1.0.0 - 2014-08-07
* Updated script/transaction test cases with the most recent files from bitcoin core
* Mining pool tags are now in miners.json - can be changed without restarting the node
* Allows to edit label of a wallet's address directly from WebUI
* Allows to select a hidden wallet at the Wallet tab of WebUI (so you can edit it)

1.0.0rc8 - 2014-06-19
* Wallet: shows hashed value of stealth prefixes (in decoded tx)
* Client: unspent4 - new format of UTXO database (lower memory and disk usage)
* Lib: add to UTXO records info about it coming from a coinbase
* Lib: bct.WriteVlen trakes 64-bit value now (previously 32)
* Downloader: further optimized, pings mode removed

1.0.0rc7 - 2014-06-11
* Wallet: more reorganizing and cleaning
* Wallet: removed "-hashes" option (added in 0.9.2)
* Reject blocks version < 2 of main chain's height >= 200000
* Check the block height from coinbase to match expected height value (for blocks version >=2)
* Check transactions for consistency and finality in parallel
* PeersDB extrancted from "client/network" to "lib/others/peersdb"
* Downloader: the seed node is optional now
* Client: print the size of blocks which are being orphaned

1.0.0rc6 - 2014-05-28
* Wallet: "-raw" command can now sign also multisig inputs (if they already have the script)
* Stealth addresses: fixed the ephemkey's 03 issue (makes it incompatible with current DW)
* Wallet: lots of reorganizing, cleaing and some basic tests added

1.0.0rc5 - 2014-05-26
* btcversig tool: added Litecoin support (specify LTC address or add "-ltc" switch for testnet)
* lib/btc: BtcAddr.OutScript() handles version 48 (Litecoin's P2KH) & panics if cannot output right script
* WebUI: shows page generation time
* WebUI: fixed non-existing page tails
* Wallet: added litcoin mode ("-ltc" switch)
* New tool: "balio". Like "fetchbal", but also works with Testnet and Litecoin. Uses only "http://blockr.io/"

1.0.0rc4 - 2014-05-22
* secp256k1 uses precomputed constants instead of calculating them during initialization (wallet starts faster)
* Source files and packeges moved around like hell. Don't even ask, but it was a change for good.
* Btc: added API functions for HDWallets (see "wallethd.go")
* Wallet: you can add "seed" param to the config file, as a potential countermeasure against keyboard loggers
* Client: new TextUI commands ("arm", "unarm", "armed") help to secure your stealth addresses' scan-keys
* Client: the balance of all the wallets gets pre-cached while opening UTXO database
* Client: configuring "Memory.NoCacheBefore" can now lower mem usage with no much visible performance drop
* Client: "NoCacheBefore" can have a negative value, that will define an offset from the highest known block
* Client: More help topics in WebUI
* Further refactor of the code

0.9.14 - 2014-05-13 (1.0.0-rc2)
* Qdb: Uses malloc() and free() from libc, to optimize usage of system memory (skips garbage collector)
* Client: improved statistics page of WebUI and renamed from Stats to Counters
* Client: added new command "age" to TextUI

0.9.13 - 2014-05-10 (1.0.0-rc1)
* Huge refactor of the entire repo
* Support for stealth addresses
* Wallet: support for "-p" switch that forces asking for seed password
* Wallet: support for "-f" swicth, to exclude fee from the fist output's value
* Wallet: many other changes

0.9.10 (intermediate checkpoint tag)
* Client: an address listed more than once in a wallet gets removed (was showing wrong balance)
* Wallet: can generate a stealth address. Use "-scankey <key>". Uses the first private key for spend.

0.9.9 - 2014-04-30 *LAST_STABLE*
* Wallet: if you specify "-msg <text>" parameter it adds a null output with the text to the tx
* Client: fixed a crash when loading a transaction with an output that has no standard address
* Client: proper removing (from the memory pool) transactions altered by the malleability
* Client: Relevant records are removed from SpentOutputs when expiring txs from mempool (memleak fix)
* Client: Do not save connected (alive) peer's record into DB more often than once per minute
* goc - a new tool to control the node from a remote console, using a WebUI interface
* peers - a new tool to display content of the peers database
* base58 - a new tool to encode/decode base58 strings
* Added "restore leading zeros" to btc.Decodeb58(), to reflect behaviour from the satoshi's code

0.9.8 - 2014-04-22
* Added locally served "Help" page to WebUI
* Some additional features on WebUI's "Home" page (e.g. network's hasharate)
* The block database uses a different index file ("blockchain.new" instead of "blockchain.idx")
  The client will convert the old index into the new one, during the first start.
  Going back to a previous version (after conversion), rename blockchain_backup.idx to blockchain.idx
  If you don't plan to go back to a previous version anymore, delete blockchain_backup.idx
* Added support for "getheaders" and "notfound" commands
* Some code in the btc lib has been restructured (now ther are functions in place of fields)

0.9.7 - 2014-04-13
* Wallets tab of WebUI has an option to move an empty address to UNUSED wallet
* A user can quickly switch wallet being at any tab of the WebUI, as well as to reload it
* SendTx tab of WebUI refreshed Address Book using Ajax and addrs.xml
* Fixes and additional test cases around parsing of alert messages
* Added unit tests for "sighash.json" from the satoshi's repo and some more unit test rework
* A link to the user manual (served at google sites) in the header of each WebUI page

0.9.6 - 2014-04-02
* Client has a hammering protection (bans peers that keep trying to reconnect)
* Miners tab of WebUI does not show crap anymore is the chain isn't up do date.
* MakeTx tab of WebUI calculates estimated transaction size after signed (assumes compressed keys)
* Downloader can work with testnet and got a fix around an empty peers db after the headers stage
* New function "tools/utils/fetchtx.go", to download raw tx data from other websites
* If neccessary, FetchBal and FetchTx try several websites to fetch a raw transaction data

0.9.5 - 2014-03-24
* "MakeTx" tab of WebUI automatically recalculates the payment values to mBTC (for verification)
* The downloader does not have a default seed node anymore (you need to find one by youself)
* Do not block connections from 129.132.230.70-100 anymore
* Some changes in wallet's decode transaction functionality to better deal with non stardard txs
* "wallet -d <txfile.txt>" ignores spaces, tabs and EOLs in the hexdump of the transaction

0.9.4 - 2014-03-20
* The default "FeePerByte" changed from 10 to 1 (like they have done it in the reference client)
* The "-d" option of the wallet can now proparly decode coinbase transactions
* The client can work with multisig address description JSON files (place them in "wallet/multisig")
* Having the files in "wallet/multisig", MakeTx tab of client's WebUI can now create "multi2sign.txt"
  ... for the wallet, even properly mixing inputs from different addresses and address types.
* For multisig payments, "payment.zip" from the client contains "multi2sign.txt" and "multi_pay_cmd"
* The wallet can now deal with mixed (multisig and regular) inputs

0.9.3 - 2014-03-14
* Fixed a critical bug in parsing OP_CHECKMULTISIG and OP_CHECKMULTISIGVERIFY
* Wallet has a new option "-msign" that signs a multisig transaction with a single key
* Wallet has a new option "-p2sh" to prepare a raw transaction for multisig processsing
* Wallet can print public key of a given bitcoin address ("-pub <addr>")
* Wallet can now properly send money to P2SH-type addresses
* The new tool "mkmulti" that can be used for generating multisig addresses
* Few improvements around handling P2SH-type scripts and addresses

0.9.2 - 2014-03-06
* Order of B_secret and A_public_key arguments swapped for "type2determ" tool
* A new tool "type2next" to calculate a next type-2 deterministic public key/address
* Wallet has a new option "-1" that used along with "-l" does not re-ask for password
* Wallet can print hashes of each transaction's input to be signed ("-raw <txfile> -hashes")
* Wallet can sign a raw hash ("-hash <hash>") with a given key ("-sign <pubadr>")
* A new tool "txaddsig" for inserting signature + public key into a raw transaction
* Show entire content of the current wallet in MakeTx tab, if the book would be empty

0.9.1 - 2014-03-01
* Little faster algos (by peterdettman) for field's sqrt() and inv() (in "btc/newec")
* Fix: wallet is not able to properly "-sign" with imported (un)compressed addresses
* Pre-caching of all the wallets' balances include commented out addresses
* "Discus Fish" added to the mining pools

0.9.0 - 2014-01-23
* The "downloader" app which can download the entire blockchain in less than 2 hours
* Major performance improvement of UTX reindexing (rebuilding) functionality
* Bugfix: the blance cache could cause panic when two outputs were being spent from the same address
* Pre-cache all the addresses from all the wallet files at startup
* Banned IP range 129.132.230.0/24 changed to 129.132.230.70 - 129.132.230.100
* No TexUI mode for apps with no access to stdin (use "-textui=false" switch)

* Added a special wallet "ADRESSES" that contains the address book (for MakeTx tab)
* Support for "virgin" addresses in the wallet files (put space before the address).
  (virgin addresses are hidden the wallet tab as long as their balance is zero)

0.8.6 - 2013-12-30
* Added "Load TX" to the top menu in WebUI
* Allow for hidden wallets (start filename with ".") and a nested sub-wallets (up to 3 levels deep)
* Fix: after changing a label in a wallet file it get changed in the unspent list as well
* Fix: the list of unspent outputs is now being sorted properly (by block height)
* "wallet -d" prints number of (yet) unsigned inputs
* "versigmsg" renamed to "btcversig" and some new features were added
* Expire external IPs after one hour from last seen
* Added new fields "Nonce", "TxCount", and "TxOffset" to "btc.Block" (set in "btc.NewBlock")

0.8.5 - 2013-12-18
* From now on every "payment.zip" contains also the unsigned raw transaction file ("tx2sign.txt")
* Added a cache for address balances to speed up switching between wallets
* Building the wallet for Windows does not require mingw anymore (now it uses msvcrt.dll for _getch)

0.8.4 - 2013-12-14
* Support for JoinCoin sort of transaction in the wallet
* We do not add mined txs to TransactionsRejected map (or at least try to)
* WebUI cosmetic here and there...
* Transaction and EC signing parts moved from the wallet app to the btc package
* Added "-raw <filename>" and "-d <filename>" command to the wallet (to sign, decode transaction file)
* Fixed decoding of P2SH-type addresses in btc.NewAddrFromPkScript()
* Added support for relay=0 received from peers (do not send tx invs to them)

0.8.3 - 2013-11-28
* Support for GOCOIN_WALLET_CONFIG env variable (enforces the wallet's config file)
* Added CFG.PayCommandName so you could e.g. make it .bat or .sh (the default is "pay_cmd.txt")
* The home tab shows time next to each unspent outputs
* Cosmetic here and there...

0.8.2 - 2013-11-10
* "fetchbal" can work via tor now (set env variable TOR=localhost:9150)
* Any own tx can now be sent to only a single random peer (privacy feature)
* You can include another wallet inside a text wallet file (use "@filename")

0.8.1 - 2013-11-06
* "fetchbalance" renamed "fetchbal" and now it works with coinbase txs properly
* New tool fetchtx to downlaod raw tx from blockexplorer.com
* Block subnet 129.132.230.0/24 (fixed for now)
* Allow to setup User-Agent reported by the version messsage (a privacy feature)
* Some minor changes in fetchbalance
* Disconnect & Ban peers that have not sent a single inv to us for 15 min since connecting

0.8.0 - 2013-10-26
* Souce code of the client hugely restructured
* A new tool "fetchbalance" that can fetch the ballance from blockchain.info & blockexplorer.com

0.7.8 - 2013-10-12
* Password chars are hidden when being input (if wallet does not build, delete "wallet/hidepass.go").
* "MakeTx" tab is precise now converting between Satoshi and BTC values

0.7.6 - 2013-09-29
* "MakeTx" tab in WebUI (to pre-make the command for the wallet app)
* Droppig a peer (from TextUI or WebUI) bans its IP by the way
* Added "-useallinputs" switch to the wallet app
* Added CFG.MiningStatHours so minig stats are not fixed to 24 hours anymore

0.7.4 - 2013-09-20
* A new port of sipa's secp256k1 lib, based on the 10x26 filed implemetnation (btc/newec)
* The new btc/newec speedup enabled by default.
* The old native speedup's source code removed.

0.7.3 - 2013-09-19
* A new (native Go) EC_Verify speedup, based on sipa's secp256k1 code (client/speedup/mygonat.go)
* Cosmetic chanegs in WebUI
* A new (DLL based) EC_Verify speedup for Windows (client/speedup/sipadll.go)

0.7.1 - 2013-09-10
* Wallet's random numbers (used for ECDSA_Sign) don't rely on security of "crypt/random" package

0.7.0 - 2013-09-03
* A major rewrite around shared memory access, in the network client
* Added some protection against racing conditions
* Do not switch off GC while verifying a block
* Added UI command "defrag" that purges and recompresses the block database
* Added snappy compression for the block database (its faster than gzip)

0.6.6 - 2013-08-27
* Added support for wallet.cfg to specify some default values
* Wallet's "-t2" and "-t3" command line swiches replaced with "-type=X"
* Labels returned in balance.xml are HTML escaped

0.6.5 - 2013-08-25
* Fixed a critical bug in script parsing (0x00 at top of the stack was not considered as "if true")
* Fetch seed peers in a background and save peers DB to disk before quiting
* Ctrl+C works now also during rescan and allows to continue later from where stopped.

0.6.4 - 2013-08-15
* Support for deterministic wallet Type-3 (keeps other keys safe, if one got compromised)
* The wallet can export private key now, in the satoshi's base58 format (-dump switch)

0.6.3 - 2013-08-09
* Show balance of per address at the Wallets tab
* Added support for WebUI switchable wallets
* Improved script_test.go, so it works directly with satoshi's json files

0.6.0 - 2013-07-27
* Added support for verifying (rejecting) P2SH transactions
* Added handling of OP_1ADD script opcopde and fixed some other opcodes
* UI cmd "unspent" returns outputs sorted by block height

0.5.8 - 2013-07-25
* Added some more satoshi-script-evaluation compatiblity patches (and unit tests)
* By default, don't download same block from more than 3 peers simultaneously (CFG.Net.MaxBlockAtOnce)
* Fixed a critical blockchain parsing issue, with SIGHASH_SINGLE sigs (was rejecting valid blocks)

0.5.5 - 2013-07-20
* The wallet now supports Type-2 deterministic keys (use "-t2" switch)
* Make the node's beeping setup configurable though gocoin.conf
* Allow to decode (display) a transaction's details (only txs that are in memory pool)
* Minor improvements in net module (i.e. shrink send buffer after each write)

0.5.3 - 2013-07-11
* XSS protection on WebUI and IP access control
* Some new network security features
* Like Satoshi client, do not process incoming messages having more than 1MB in send buffer
* Some changes around qdb database (improved syncs for unspent db, added counters)

0.5.2 - 2013-07-07
* WebUI improvements
* Yet more improved "qdb" is now a part of the repo

0.5.0 - 2013-07-04
* Requires new "qdb" ... much imporved statrup times.
* Never keeps unwind records in memory (only on disk)
* Allows to not keep old unspent outputs in mem. Modify "UTXOCacheBlks" in the config to switch it on.

0.4.8 - 2013-07-02
* Added new blocks' timing stats to the WebUI
* New tool "importblocks" for importing blocks from Satoshi's DB
* Improvements in tx memory pool
* Big rework in the network module
* Allow sorting of transaction tables in WebUI

0.4.3 - 2013-06-27
* Some more WebUI templates, and further extensions
* Fixed a bug with checking new block height in block_check.go
* Allows loading and broadcasting of local txs via WebUI
* Allows to download the balance folder via WebUI
* More WebUI templates

0.4.1 - 2013-06-25
* Do not route txs that have any output lower than a fee for 0.5KB
* Added support for a config file
* Fixed a bug introduced in 0.4.0 that was removing own txs from the pool
* Templates for WebUI

0.4.0 - 2013-06-24
* Added tx routing (you can switch it off with "-txr=false")
* Further WebUI extensions
* A bunch of other code changes, that I don't remember now

0.3.5 - 2013-06-23
* Addded WebUI - by default on http://127.0.0.1:8833/
* Improved framework for mining stats
* Changed the way "getblocks" is requested, plus some other hard to describe net related changes

0.3.4 - 2013-06-20
* Arithmetic script opcodes check for the 4 bytes limit at input values
* Better external IP address discovery and droping connections to self
* Added a memory cache for blocks database (in btc/blockdb.go)
* Added sipasec cgo for EC_Verify (over 5 times faster than openssl)

0.2.15 - 2013-06-18
* Support for gzip compressed blocks inside blockchain.dat
* A tool to compress blockchain.dat (tools/compressdb.go)
* Rejects blocks that would cause forks long ago in a past
